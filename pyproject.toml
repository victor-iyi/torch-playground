[tool.poetry]
name = "torch-playground"
version = "1.0.0"
description = "PyTorch playground"
license = "Apache-2.0"

authors = ["Victor I. Afolabi <javafolabi@gmail.com>"]
maintainers = [
  "Victor I. Afolabi <javafolabi@gmail.com>",
]

readme = "README.md"
repository = "https://github.com/victor-iyi/torch-playground"
keywords = ["pytorch", "playground", "deep-learning"]

classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Environment :: Console",
  "Intended Audience :: Developers",
  "Intended Audience :: Education",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: Apache 2.0",
  "License :: OSI Approved :: Apache Software License",
  "Operating System :: OS Independent",
  "Operating System :: MacOS :: MacOS X",
  "Operating System :: POSIX",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: Implementation :: CPython",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Software Development :: Libraries :: Python Modules",
]

packages = [
  { include = "playground", from = "src" }
]

[tool.poetry.dependencies]
python = ">=3.9"

# Tensor and dynamic neural net with strong GPU acceleration.
# torch = { version = ">=1.13.0", allow-prereleases = true }
# torchvision = "*"
# torchaudio = "*"
# State-of-the-art Machine Learning for JAX, PyTorch & TensorFlow.
# Provides APIs and tools to download and train pretrained models.
transformers = ">=4.22.2"
# Fast, extensible progress meter.
tqdm = ">=4.64.1"
# Python Imaging Library.
Pillow = ">=9.3.0"

[tool.poetry.dev-dependencies]
# Automatically format Python code to PEP 8 style guide.
autopep8 = ">=1.7.0"
# A coverage plugin to provide sensible default settings.
covdefaults = { version = ">=2.2.0", optional = true }
# The modular source checker.
flake8 = ">=3.6.1"
# Scientific workspace & experimentation.
jupyterlab = ">=3.4.8"
# Optional static typing for Python
mypy = ">=0.982"
# Managing and maintaining pre-commit hooks.
pre-commit = ">=2.20.0"
# Python style guide checker.
pycodestyle = { version = "*", optional = true }
# Simple powerful testing with Python
pytest = ">=7.1.3"
# Python plugin for measuring coverage.
pytest-cov = { version = ">=4.0.0", optional = true }
# Generic virtualenv management and test cli tool.
tox = { version = ">=3.26.0", optional = true }


[tool.poetry.urls]
"Bug Tracker"  = "https://github.com/victor-iyi/torch-playground/issues"

# Poetry build system. See: https://python-poetry.org/docs/pyproject
[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# Style hinting.
[tool.mypy]
files = "src"
mypy_path = "src"
namespace_packages = true
explicit_package_bases = true
strict = true
check_untyped_defs = true
ignore_missing_imports = true
disallow_any_generics = true
disallow_incomplete_defs = true
implicit_reexport = false
no_implicit_optional = true
show_error_codes = true
show_column_numbers = true
# show_error_content = true
warn_unused_configs = true
warn_unused_ignores = true
# warn_redundant_cast = true
warn_return_any = true
warn_unreachable = true

# Pyright Type Checking.
# [tool.pyright]
# reportOptionalCall = "none"
# reportGeneralTypeIssues = "none"
# reportOptionalMemberAccess = "none"

# Coverage report.
[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "if TYPE_CHECKING:",
  "raise NotImplementedError",
  "if __name__ == .__main__.",
]

[tool.coverage.run]
plugin = "covdefaults"
